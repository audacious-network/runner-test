name: do-the-job
on: push
jobs:
  start-runner:
    name: start self-hosted aws runner
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.start-aws-runner.outputs.label }}
      aws-instance-id: ${{ steps.start-aws-runner.outputs.aws-instance-id }}
    steps:
      -
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      -
        name: start runner
        id: start-aws-runner
        uses: audacious-network/aws-github-runner@v1.0.7
        with:
          mode: start
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          aws-region: us-east-1
          aws-instance-type: t3.nano
          aws-instance-lifecycle: spot
          aws-image-search-pattern: ubuntu/images/hvm-ssd/ubuntu-focal-20.04-amd64-server-*
          aws-image-search-owners: '["099720109477"]' # canonical
          aws-instance-username: grenade
          aws-instance-ssh-public-key: ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPb24HEQ++aNFWaqVyMtIs6GotUB8R+q61XOoI2z6uMj
          aws-subnet-id: subnet-08c26caf0a52b7c19
          aws-security-group-id: sg-0315bffea9042ac9b
          aws-resource-tags: >
            [
              {
                "Key": "Name",
                "Value": "github-action-runner"
              },
              {
                "Key": "GitHubRepository",
                "Value": "${{ github.repository }}"
              }
            ]
  do-the-job:
    name: do the job on the runner
    needs: start-runner # required to start the main job when the runner is ready
    runs-on: ${{ needs.start-runner.outputs.label }} # run the job on the newly created runner
    steps:
      -
        name: hello world
        run: echo 'hello world!'
  stop-runner:
    name: stop self-hosted aws runner
    needs:
      - start-runner # required to get output from the start-runner job
      - do-the-job # required to wait when the main job is done
    runs-on: ubuntu-latest
    if: ${{ always() }} # required to stop the runner even if the error happened in the previous jobs
    steps:
      -
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      -
        name: stop runner
        uses: audacious-network/aws-github-runner@v1.0.7
        with:
          mode: stop
          github-token: ${{ secrets.GH_PERSONAL_ACCESS_TOKEN }}
          label: ${{ needs.start-runner.outputs.label }}
          aws-region: us-east-1
          aws-instance-id: ${{ needs.start-runner.outputs.aws-instance-id }}